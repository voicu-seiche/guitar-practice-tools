{"version":3,"sources":["components/copyright.component.tsx","components/title.component.tsx","components/card.component.tsx","actions/noteLearning.actions.tsx","pages/dashboard.component.tsx","pages/noteLearning.component.tsx","routes.tsx","components/navbar.styles.tsx","components/navbar.component.tsx","App.tsx","reportWebVitals.ts","reducers/noteLearning.reducer.ts","store/store.ts","theme.tsx","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Title","props","Fragment","component","gutterBottom","children","useStyles","makeStyles","theme","paper","padding","spacing","display","overflow","flexDirection","fixedHeight","height","Card","NoteLearningTypes","classes","Paper","className","title","Divider","Dashboard","createStyles","note","palette","secondary","contrastText","backgroundColor","main","NoteLearning","dispatch","useDispatch","notes","useSelector","state","noteLearning","Grid","container","item","xs","md","lg","Box","my","map","index","Avatar","Button","onClick","type","RandomNotes","Routes","path","name","icon","DashboardIcon","MusicNoteIcon","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","primary","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","withRouter","React","useState","open","setOpen","activeRoute","routeName","location","pathname","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","List","route","ListItem","button","to","selected","ListItemIcon","ListItemText","Tooltip","placement","root","appBarSpacer","content","paddingTop","paddingBottom","App","CssBaseline","Container","maxWidth","exact","pt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialNoteLearningState","shuffle","array","permutations","permute","Math","floor","random","length","results","backtrack","temp","forEach","elementIndex","findIndex","value","previousElement","nextElement","isElementNear","push","pop","slice","element","rootReducer","combineReducers","action","createMuiTheme","light","dark","error","red","A400","background","default","store","createStore","undefined","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","document","querySelector","console","log"],"mappings":"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","file":"static/js/main.d7364f4b.chunk.js","sourcesContent":["import Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport React from 'react';\r\n\r\nconst Copyright = () => {\r\n\treturn (\r\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n\t\t\t{'Copyright Â© '}\r\n\t\t\t<Link color=\"inherit\" href=\"#\">SVB</Link>{' '}\r\n\t\t\t{new Date().getFullYear()}\r\n\t\t\t{'.'}\r\n\t\t</Typography>\r\n\t);\r\n}\r\n\r\nexport default Copyright;\r\n","import Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nexport default function Title(props: any) {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                {props.children}\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nTitle.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n","import Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Title from './title.component';\r\n// import clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tpaper: {\r\n\t\tpadding: theme.spacing(2),\r\n\t\tdisplay: 'flex',\r\n\t\toverflow: 'auto',\r\n\t\tflexDirection: 'column',\r\n\t},\r\n\tfixedHeight: {\r\n\t\theight: 240,\r\n\t},\r\n}));\r\n\r\nfunction Card(props: any) {\r\n\tconst classes = useStyles();\r\n\t// const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<Title>{props.title}</Title>\r\n\t\t\t\t<Divider variant=\"fullWidth\" />\r\n\t\t\t\t{props.children}\r\n\t\t\t</Paper>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nCard.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tchildren: PropTypes.node,\r\n};\r\n\r\nexport default Card;\r\n","import { ActionCreator } from \"redux\";\r\n\r\nexport enum NoteLearningTypes {\r\n\tRandomNotes,\r\n}\r\n\r\nexport interface IRandmizeNotes {\r\n\ttype: NoteLearningTypes;\r\n}\r\n\r\nexport type NoteLearningActions = IRandmizeNotes;\r\n\r\nexport const RandomizeNotes: ActionCreator<IRandmizeNotes> = () => {\r\n\treturn {\r\n\t\ttype: NoteLearningTypes.RandomNotes,\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from '../components/card.component';\r\n\r\nconst Dashboard = () => {\r\n\treturn (\r\n\t\t<Card title=\"Dashboard\"></Card>\r\n\t);\r\n}\r\n\r\nexport default Dashboard;\r\n","import Avatar from '@material-ui/core/Avatar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RandomizeNotes } from '../actions/noteLearning.actions';\r\nimport Card from '../components/card.component';\r\n// import Fretboad from '../components/fretboard.component';\r\nimport { IAppState } from '../store/store';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\tnote: {\r\n\t\t\tcolor: theme.palette.secondary.contrastText,\r\n\t\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\t},\r\n\t}),\r\n);\r\n\r\nconst NoteLearning = () => {\r\n\tconst classes = useStyles();\r\n\tconst dispatch = useDispatch();\r\n\tconst notes = useSelector((state: IAppState) => state.noteLearning.notes);\r\n\r\n\tconst handleRandomNotes = () => {\r\n\t\tdispatch(RandomizeNotes());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t<Grid item xs={12} md={4} lg={7}>\r\n\t\t\t\t\t<Card title=\"Note learning exercices\">\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12} md={8} lg={5}>\r\n\t\t\t\t\t<Card title=\"Note Learning\">\r\n\t\t\t\t\t\t<Box my={2} display=\"flex\" flexDirection=\"row\">\r\n\t\t\t\t\t\t\t{notes.map((item, index) => {\r\n\t\t\t\t\t\t\t\treturn <Avatar key={index} className={classes.note}>\r\n\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t<Button variant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={handleRandomNotes}>\r\n\t\t\t\t\t\t\t\t<SyncIcon />\r\n                        \t\tRandomize notes\r\n                    \t\t</Button>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t{/* <Fretboad /> */}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default NoteLearning;\r\n","import DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNote';\r\n\r\nimport Dashboard from './pages/dashboard.component';\r\nimport NoteLearning from './pages/noteLearning.component';\r\n\r\nexport interface IRoute {\r\n\tpath: string;\r\n\tname: string;\r\n\tcomponent: any;\r\n\ticon: any;\r\n}\r\n\r\nconst Routes: IRoute[] = [\r\n\t{\r\n\t\tpath: '/',\r\n\t\tname: 'Dashboard',\r\n\t\tcomponent: Dashboard,\r\n\t\ticon: DashboardIcon,\r\n\t},\r\n\t{\r\n\t\tpath: '/note-learning',\r\n\t\tname: 'Note Learning',\r\n\t\tcomponent: NoteLearning,\r\n\t\ticon: MusicNoteIcon,\r\n\t},\r\n];\r\n\r\nexport default Routes;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\ttoolbar: {\r\n\t\tpaddingRight: 24, // keep right padding when drawer closed\r\n\t},\r\n\ttoolbarIcon: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tjustifyContent: 'flex-end',\r\n\t\tpadding: '0 8px',\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\tcolor: theme.palette.primary.contrastText,\r\n\t\t...theme.mixins.toolbar,\r\n\t},\r\n\tappBar: {\r\n\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tappBarShift: {\r\n\t\tmarginLeft: drawerWidth,\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: 36,\r\n\t},\r\n\tmenuButtonHidden: {\r\n\t\tdisplay: 'none',\r\n\t},\r\n\ttitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tdrawerPaper: {\r\n\t\tposition: 'relative',\r\n\t\twhiteSpace: 'nowrap',\r\n\t\twidth: drawerWidth,\r\n\t\ttransition: theme.transitions.create('width', {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tdrawerPaperClose: {\r\n\t\toverflowX: 'hidden',\r\n\t\ttransition: theme.transitions.create('width', {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t\twidth: theme.spacing(7),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: theme.spacing(9),\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nexport default useStyles;\r\n","import AppBar from '@material-ui/core/AppBar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport Routes from '../routes';\r\nimport useStyles from './navbar.styles';\r\n\r\nconst NavBar = (props: any) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst handleDrawerOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\tconst handleDrawerClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst activeRoute = (routeName: any) => {\r\n\t\treturn props.location.pathname === routeName ? true : false;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n\t\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tonClick={handleDrawerOpen}\r\n\t\t\t\t\t\tclassName={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n\t\t\t\t\t\tGuitar Practice Tools\r\n                    </Typography>\r\n\t\t\t\t\t<IconButton color=\"inherit\">\r\n\t\t\t\t\t\t<Badge badgeContent={0} color=\"secondary\">\r\n\t\t\t\t\t\t\t<NotificationsIcon />\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<Drawer\r\n\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tpaper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n\t\t\t\t}}\r\n\t\t\t\topen={open}>\r\n\t\t\t\t<div className={classes.toolbarIcon}>\r\n\t\t\t\t\t<Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n\t\t\t\t\t\tMenu\r\n                    </Typography>\r\n\t\t\t\t\t<IconButton onClick={handleDrawerClose} color=\"inherit\">\r\n\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{Routes.map((route, index) => {\r\n\t\t\t\t\t\tlet listItem;\r\n\t\t\t\t\t\tif (open) {\r\n\t\t\t\t\t\t\tlistItem = <ListItem button component={Link} to={route.path} key={index} color=\"secondary\" selected={activeRoute(route.path)}>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<route.icon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary={route.name} />\r\n\t\t\t\t\t\t\t</ListItem>;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlistItem = <Tooltip title={route.name} placement=\"right\" key={index}>\r\n\t\t\t\t\t\t\t\t<ListItem button component={Link} to={route.path} color=\"secondary\" selected={activeRoute(route.path)}>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<route.icon />\r\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={route.name} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Tooltip>;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn listItem;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Copyright from './components/copyright.component';\r\nimport NavBar from './components/navbar.component';\r\nimport Routes from './routes';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tappBarSpacer: theme.mixins.toolbar,\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\theight: '100vh',\r\n\t\toverflow: 'auto',\r\n\t},\r\n\tcontainer: {\r\n\t\tpaddingTop: theme.spacing(4),\r\n\t\tpaddingBottom: theme.spacing(4),\r\n\t},\r\n}));\r\n\r\n\r\nconst App = () => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<NavBar />\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.appBarSpacer} />\r\n\t\t\t\t<Container maxWidth=\"lg\" className={classes.container}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t{Routes.map((route: any) => (\r\n\t\t\t\t\t\t\t<Route exact path={route.path} key={route.path}>\r\n\t\t\t\t\t\t\t\t<route.component />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t\t<Box pt={4}>\r\n\t\t\t\t\t\t<Copyright />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Reducer } from \"redux\";\r\nimport { NoteLearningActions, NoteLearningTypes } from \"../actions/noteLearning.actions\";\r\n\r\nexport interface INoteLearningState {\r\n\tnotes: string[];\r\n}\r\n\r\nexport const initialNoteLearningState = {\r\n\tnotes: ['A', 'B', 'C', 'D', 'E', 'F', 'G',]\r\n};\r\n\r\nexport const noteLearningReducer: Reducer<INoteLearningState, NoteLearningActions> = (\r\n\tstate = initialNoteLearningState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase NoteLearningTypes.RandomNotes:\r\n\t\t\tlet notes = shuffle([...initialNoteLearningState.notes]);\r\n\t\t\tif (!notes) {\r\n\t\t\t\tnotes = [];\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nconst shuffle = (array: string[]) => {\r\n\tconst permutations = permute(array);\r\n\r\n\tconst randomIndex = Math.floor(Math.random() * permutations.length);\r\n\r\n\treturn permutations[randomIndex - 1];\r\n}\r\n\r\nconst permute = (array: string[]) => {\r\n\tconst results: string[][] = [];\r\n\r\n\tconst backtrack = (array: string[], temp: string[]) => {\r\n\t\tif (temp.length === array.length) {\r\n\t\t\tresults.push(temp.slice());\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarray.forEach((item, index) => {\r\n\t\t\tconst elementIndex = temp.findIndex((value) => value === item);\r\n\r\n\t\t\tconst previousElement = index > 0 ? array[index - 1] : '';\r\n\t\t\tconst nextElement = index < array.length ? array[index + 1] : '';\r\n\r\n\t\t\tif (elementIndex < 0 && !isElementNear(temp, previousElement) && !isElementNear(temp, nextElement)) {\r\n\t\t\t\ttemp.push(item);\r\n\t\t\t\tbacktrack(array, temp);\r\n\t\t\t\ttemp.pop();\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tbacktrack(array, []);\r\n\treturn results;\r\n};\r\n\r\nconst isElementNear = (array: string[], element: string) => {\r\n\tif (!!element) {\r\n\t\tif (array.length > 0) {\r\n\t\t\treturn array[array.length - 1] === element;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n","import { applyMiddleware, combineReducers, createStore, Store } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { INoteLearningState, noteLearningReducer } from '../reducers/noteLearning.reducer';\r\n\r\n// Create an interface for the application state\r\nexport interface IAppState {\r\n\tnoteLearning: INoteLearningState,\r\n}\r\n\r\n// Create the root reducer\r\nconst rootReducer = combineReducers<IAppState>({\r\n\tnoteLearning: noteLearningReducer,\r\n});\r\n\r\n// Create a configure store function of type `IAppState`\r\nexport default function configureStore(): Store<IAppState, any> {\r\n\tconst store = createStore(rootReducer, undefined, applyMiddleware(thunk));\r\n\treturn store;\r\n}\r\n","import red from '@material-ui/core/colors/red';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\t// main: '#45bf3c',\r\n\t\t\t// light: '#7df36c',\r\n\t\t\t// dark: '#008e00',\r\n\t\t\t// contrastText: '#000',\r\n\t\t\tmain: '#9c27b0',\r\n\t\t\tcontrastText: '#fff',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: '#ffb100',\r\n\t\t\tlight: '#ffe34c',\r\n\t\t\tdark: '#c68200',\r\n\t\t\tcontrastText: '#fff',\r\n\t\t},\r\n\t\terror: {\r\n\t\t\tmain: red.A400,\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: '#e0e0e0',\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default theme;\r\n","import CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport configureStore from './store/store';\r\nimport theme from './theme';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t{/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n\t\t\t<CssBaseline />\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<App />\r\n\t\t\t</HashRouter>\r\n\t\t</ThemeProvider>\r\n\t</Provider>,\r\n\tdocument.querySelector('#root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}